<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/[YOUR_FILE].tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/[YOUR_FILE].tsx" />
              <option name="updatedContent" value="// ...existing code...&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;// ...existing code...&#10;&lt;div className=&quot;flex gap-4&quot;&gt;&#10;    &lt;Button&#10;        type=&quot;submit&quot;&#10;        disabled={loading}&#10;        variant=&quot;default&quot;&#10;    &gt;&#10;        {loading ? &quot;Menyimpan...&quot; : mode === &quot;create&quot; ? &quot;Tambah&quot; : &quot;Update&quot;}&#10;    &lt;/Button&gt;&#10;&#10;    {onCancel &amp;&amp; (&#10;        &lt;Button&#10;            type=&quot;button&quot;&#10;            variant=&quot;secondary&quot;&#10;            onClick={onCancel}&#10;        &gt;&#10;            Batal&#10;        &lt;/Button&gt;&#10;    )}&#10;&lt;/div&gt;&#10;// ...existing code...&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/auth/LoginForm.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/auth/LoginForm.tsx" />
              <option name="originalContent" value="&quot;use client&quot;&#10;&#10;import { useState } from &quot;react&quot;&#10;import { useRouter } from &quot;next/navigation&quot;&#10;import { Input } from &quot;@/components/ui/input&quot;&#10;import { Button } from &quot;@/components/ui/button&quot;&#10;import { Label } from &quot;@/components/ui/label&quot;&#10;import axios from &quot;axios&quot;&#10;&#10;export default function LoginForm() {&#10;    const router = useRouter()&#10;    const [email, setEmail] = useState(&quot;&quot;)&#10;    const [password, setPassword] = useState(&quot;&quot;)&#10;    const [loading, setLoading] = useState(false)&#10;    const [error, setError] = useState(&quot;&quot;)&#10;&#10;    const handleLogin = async (e: React.FormEvent) =&gt; {&#10;        e.preventDefault()&#10;        setLoading(true)&#10;        setError(&quot;&quot;)&#10;&#10;        try {&#10;            const res = await axios.post(&quot;/api/auth/login&quot;, {&#10;                email,&#10;                password,&#10;            })&#10;&#10;            if (res.data?.token) {&#10;                localStorage.setItem(&quot;token&quot;, res.data.token)&#10;                router.push(&quot;/dashboard&quot;)&#10;            }&#10;        } catch (err: any) {&#10;            setError(err.response?.data?.error || &quot;Login gagal&quot;)&#10;        } finally {&#10;            setLoading(false)&#10;        }&#10;    }&#10;&#10;    return (&#10;        &lt;form onSubmit={handleLogin} className=&quot;w-full max-w-sm space-y-4&quot;&gt;&#10;            &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;email&quot; className={&quot;mb-2&quot;}&gt;Email&lt;/Label&gt;&#10;                &lt;Input&#10;                    type=&quot;email&quot;&#10;                    id=&quot;email&quot;&#10;                    value={email}&#10;                    onChange={(e) =&gt; setEmail(e.target.value)}&#10;                    required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;password&quot; className={&quot;mb-2&quot;}&gt;Password&lt;/Label&gt;&#10;                &lt;Input&#10;                    type=&quot;password&quot;&#10;                    id=&quot;password&quot;&#10;                    value={password}&#10;                    onChange={(e) =&gt; setPassword(e.target.value)}&#10;                    required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            {error &amp;&amp; &lt;p className=&quot;text-sm text-red-500&quot;&gt;{error}&lt;/p&gt;}&#10;&#10;            &lt;Button type=&quot;submit&quot; disabled={loading} className=&quot;w-full&quot;&gt;&#10;                {loading ? &quot;Logging in...&quot; : &quot;Login&quot;}&#10;            &lt;/Button&gt;&#10;        &lt;/form&gt;&#10;    )&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;&#10;&#10;import { useState } from &quot;react&quot;&#10;import { useRouter } from &quot;next/navigation&quot;&#10;import { Input } from &quot;@/components/ui/input&quot;&#10;import { Button } from &quot;@/components/ui/button&quot;&#10;import { Label } from &quot;@/components/ui/label&quot;&#10;import axios from &quot;axios&quot;&#10;&#10;export default function LoginForm() {&#10;    const router = useRouter()&#10;    const [email, setEmail] = useState(&quot;&quot;)&#10;    const [password, setPassword] = useState(&quot;&quot;)&#10;    const [loading, setLoading] = useState(false)&#10;    const [error, setError] = useState(&quot;&quot;)&#10;&#10;    const handleLogin = async (e: React.FormEvent) =&gt; {&#10;        e.preventDefault()&#10;        setLoading(true)&#10;        setError(&quot;&quot;)&#10;&#10;        try {&#10;            const apiUrl = process.env.NEXT_PUBLIC_API_URL&#10;            const res = await axios.post(&#10;                `${apiUrl}/api/auth/login`,&#10;                {&#10;                    email,&#10;                    password,&#10;                }&#10;            )&#10;&#10;            if (res.data?.token) {&#10;                localStorage.setItem(&quot;token&quot;, res.data.token)&#10;                router.push(&quot;/dashboard&quot;)&#10;            }&#10;        } catch (err: any) {&#10;            setError(err.response?.data?.error || &quot;Login gagal&quot;)&#10;        } finally {&#10;            setLoading(false)&#10;        }&#10;    }&#10;&#10;    return (&#10;        &lt;form onSubmit={handleLogin} className=&quot;w-full max-w-sm space-y-4&quot;&gt;&#10;            &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;email&quot; className={&quot;mb-2&quot;}&gt;Email&lt;/Label&gt;&#10;                &lt;Input&#10;                    type=&quot;email&quot;&#10;                    id=&quot;email&quot;&#10;                    value={email}&#10;                    onChange={(e) =&gt; setEmail(e.target.value)}&#10;                    required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div&gt;&#10;                &lt;Label htmlFor=&quot;password&quot; className={&quot;mb-2&quot;}&gt;Password&lt;/Label&gt;&#10;                &lt;Input&#10;                    type=&quot;password&quot;&#10;                    id=&quot;password&quot;&#10;                    value={password}&#10;                    onChange={(e) =&gt; setPassword(e.target.value)}&#10;                    required&#10;                /&gt;&#10;            &lt;/div&gt;&#10;&#10;            {error &amp;&amp; &lt;p className=&quot;text-sm text-red-500&quot;&gt;{error}&lt;/p&gt;}&#10;&#10;            &lt;Button type=&quot;submit&quot; disabled={loading} className=&quot;w-full&quot;&gt;&#10;                {loading ? &quot;Logging in...&quot; : &quot;Login&quot;}&#10;            &lt;/Button&gt;&#10;        &lt;/form&gt;&#10;    )&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>